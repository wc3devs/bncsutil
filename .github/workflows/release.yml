name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
    paths:
      - '**/*.c'
      - '**/*.cpp'
      - '**/*.h'
      - '**/*.cmake'
      - 'CMakeLists.txt'
      - '.github/workflows/release.yml'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 19.0.2
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
            conventional-changelog-conventionalcommits@4.6.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new_version: ${{ steps.release.new_release_published }}
      new_release_version: ${{ steps.release.new_release_version }}

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    needs:
      - release

    steps:
      - uses: actions/checkout@v2

      - name: Debug
        run: |
          echo ${{ needs.release.outputs.new_release_published }}
          echo ${{ needs.release.outputs.new_release_version }}

      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y yasm texinfo

      - name: Caching vcpkg deps
        uses: actions/cache@v3
        with:
          path: |
            build/_deps
            build/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Build
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DWORKFLOW_PROVIDED_VERSION=${{ needs.release.outputs.new_release_version }}
          cmake --build build --config ${{ env.BUILD_TYPE }} --parallel
          cmake --install build --prefix ./install --config ${{ env.BUILD_TYPE }}

      - name: Test
        run: |
          ./bncsutil-test
        working-directory: build

      - name: Upload release assets
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: './install/bin/*'
