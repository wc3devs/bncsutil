# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

include("cmake/version.cmake")

project(bncsutil
	LANGUAGES
		C
		CXX
	VERSION
		${VERSION}
)

include("cmake/generate.cmake")

if(CMKR_ROOT_PROJECT AND NOT CMKR_DISABLE_VCPKG)
	include(FetchContent)
	message(STATUS "Fetching vcpkg (2022.07.25)...")
	FetchContent_Declare(vcpkg URL "https://github.com/microsoft/vcpkg/archive/refs/tags/2022.07.25.tar.gz")
	FetchContent_GetProperties(vcpkg)
	if(NOT vcpkg_POPULATED)
		FetchContent_Populate(vcpkg)
		include("${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake")
	endif()
endif()

# Packages
find_package(doctest REQUIRED)

# Target bncsutil
set(CMKR_TARGET bncsutil)
include("cmake/mpir.cmake")

set(bncsutil_SOURCES "")

list(APPEND bncsutil_SOURCES
	"src/bsha1.cpp"
	"src/cdkeydecoder.cpp"
	"src/checkrevision.cpp"
	"src/decodekey.cpp"
	"src/file.cpp"
	"src/libinfo.cpp"
	"src/oldauth.cpp"
	"src/debug.c"
	"src/nls.c"
	"src/pe.c"
	"src/sha1.c"
	"src/stack.c"
	"cmake/libinfo.h.in"
)

list(APPEND bncsutil_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${bncsutil_SOURCES})
add_library(bncsutil SHARED)

if(bncsutil_SOURCES)
	target_sources(bncsutil PRIVATE ${bncsutil_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${bncsutil_SOURCES})

target_compile_definitions(bncsutil PRIVATE
	USE_NEW_BSHA1=${USE_NEW_BSHA1}
	BNCSUTIL_DEBUG_MESSAGES=${BNCSUTIL_DEBUG_MESSAGES}
)

target_include_directories(bncsutil PUBLIC
	"$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>"
	"$<INSTALL_INTERFACE:include>"
)

target_link_libraries(bncsutil PUBLIC
	"$<BUILD_INTERFACE:mpir>"
)

include("cmake/install.cmake")

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

# Target test
set(CMKR_TARGET test)
set(test_SOURCES "")

list(APPEND test_SOURCES
	"tests/bsha1.cpp"
	"tests/cdkeydecoder.cpp"
	"tests/checkrevision.cpp"
	"tests/libinfo.cpp"
	"tests/main.cpp"
	"tests/nls.cpp"
)

list(APPEND test_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${test_SOURCES})
add_executable(test)

if(test_SOURCES)
	target_sources(test PRIVATE ${test_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT test)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${test_SOURCES})

target_link_libraries(test PRIVATE
	doctest::doctest
	bncsutil
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

